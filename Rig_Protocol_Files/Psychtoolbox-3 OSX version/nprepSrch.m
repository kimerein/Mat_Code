% Daniel Shima 9/20/2007% For nprepSrch.m port from Lab 030 OS9 Psychtoolbox-2 to Lab 023 OSX Psychtoolbox-3,% made cosmetic modifications,% cleaned up Screen-command style and overall case-sensitivity for current MATLAB and Psychtoolbox-3,% added DEBUG level 2,% added fprintf comments for each case and use_fprintf flag.,function nprepSrch(fnum, item, eccy, angle, ssize, sprop, phflag, comflag);%       1, frame number,%	    2, item: fixation, L, T coded in #%	    3, eccentricity%	    4, angle coded in number%	    5, stimulus size%	    6, stimulus property: color, texture%	    7, placeholder flag% 	    8, common onset mask flag% target configuration%% square:1,     circle: 3,      outline: 2,% T(0): 11,     T(90): 12,      T(180): 13,     T(270): 14,% L(0): 21,     L(90): 22,      L(180): 23,     L(270): 24,% Fix1: 100,    Fix2: 101,      placeholer: 6,four dot: 7;% Min-Suk Kang% Psy, Vandy% global variables declared in videoClientglobal CUR_WINDOW SrcWindow Xmax Ymax Xc Ycglobal DEBUG DOTS_CLUTangle = 360-360/8*angle;stimsize = ssize;windowno = fnum;color_no = floor(sprop);use_fprintf = 0;if (DEBUG == 0 || DEBUG == 2)    stim_pos = [Xc+eccy*cos(2*pi*angle/360) Yc+eccy*sin(2*pi*angle/360)];    switch item        case 1 % square            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)-stimsize/2 stim_pos(1)+stimsize/2 stim_pos(2)+stimsize/2]);            if (use_fprintf)                fprintf('Make square (case 1)\n');            end        case 2 % outline            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)-stimsize/2 stim_pos(1)+stimsize/2 stim_pos(2)+stimsize/2]);            Screen('FillRect', SrcWindow(windowno), 0, ...                [stim_pos(1)-(stimsize-2)/2 stim_pos(2)-(stimsize-2)/2 stim_pos(1)+(stimsize-2)/2 stim_pos(2)+(stimsize-2)/2]);            if (use_fprintf)                fprintf('Make outline (case 2)\n')            end        case 3 % circle            Screen('FillOval', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)-stimsize/2 stim_pos(1)+stimsize/2 stim_pos(2)+stimsize/2]);            if (use_fprintf)                fprintf('Make circle (case 3)\n')            end        case 4 % circle            Screen('FillOval', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)-stimsize/2 stim_pos(1)+stimsize/2 stim_pos(2)+stimsize/2]);            if (use_fprintf)                fprintf('Make circle (case 4)\n')            end        case 5% circle            Screen('FillOval', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)-stimsize/2 stim_pos(1)+stimsize/2 stim_pos(2)+stimsize/2]);            if (use_fprintf)                fprintf('Make circle (case 5)\n')            end            % T        case 11 % T            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)-stimsize/2 stim_pos(1)+stimsize/2 stim_pos(2)-((stimsize/2)/2)]); % top segment of T            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)-((stimsize/2)/4) stim_pos(2)-stimsize/2 stim_pos(1)+((stimsize/2)/4) stim_pos(2)+stimsize/2]); % vertical segment of T            if (use_fprintf)                fprintf('Make T 0 deg\n')            end        case 12 % T 90 deg. rotate            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)+((stimsize/2)/2) stim_pos(2)-stimsize/2 stim_pos(1)+stimsize/2 stim_pos(2)+stimsize/2]); % right segment of T            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)-((stimsize/4)/2) stim_pos(1)+stimsize/2 stim_pos(2)+((stimsize/4)/2)]); % middle seg of T            if (use_fprintf)                fprintf('Make T 90 deg\n')            end        case 13 % T 180 deg. rotate            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)+((stimsize/2)/2) stim_pos(1)+stimsize/2 stim_pos(2)+stimsize/2]); % bottom segment of T            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)-((stimsize/2)/4) stim_pos(2)-stimsize/2 stim_pos(1)+((stimsize/2)/4) stim_pos(2)+stimsize/2]); % vertical segment of T            if (use_fprintf)                fprintf('Make T 180 deg\n')            end        case 14 % T 270 deg. rotate            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)-stimsize/2 stim_pos(1)-((stimsize/2)/2) stim_pos(2)+stimsize/2]); % left segment of T            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)-((stimsize/4)/2) stim_pos(1)+stimsize/2 stim_pos(2)+((stimsize/4)/2)]); % middle seg of T            if (use_fprintf)                fprintf('Make T 270 deg\n')            end            % L        case 21 % L            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)-stimsize/2 stim_pos(1)-((stimsize/2)/2) stim_pos(2)+stimsize/2]); % left segment of L            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)+((stimsize/2)/2) stim_pos(1)+stimsize/2 stim_pos(2)+stimsize/2]); % bottom seg of L            if (use_fprintf)                fprintf('Make L 0 deg\n')            end        case 22 % L 90 deg. rotate            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)-stimsize/2 stim_pos(1)-((stimsize/2)/2) stim_pos(2)+stimsize/2]); % left segment of L            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)-stimsize/2 stim_pos(1)+stimsize/2 stim_pos(2)-((stimsize/2)/2)]); % top segment of L            if (use_fprintf)                fprintf('Make L 90 deg\n')            end        case 23 % L 180 deg. rotate            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)-stimsize/2 stim_pos(1)+stimsize/2 stim_pos(2)-((stimsize/2)/2)]); % top segment of L            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)+((stimsize/2)/2) stim_pos(2)-stimsize/2 stim_pos(1)+stimsize/2 stim_pos(2)+stimsize/2]); % right segment of L            if (use_fprintf)                fprintf('Make L 180 deg\n')            end        case 24 % L 270 deg. rotate            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)+((stimsize/2)/2) stim_pos(2)-stimsize/2 stim_pos(1)+stimsize/2 stim_pos(2)+stimsize/2]); % right segment of L            Screen('FillRect', SrcWindow(windowno), color_no, ...                [stim_pos(1)-stimsize/2 stim_pos(2)+((stimsize/2)/2) stim_pos(1)+stimsize/2 stim_pos(2)+stimsize/2]); % bottom seg of L            if (use_fprintf)                fprintf('Make L 270 deg\n')            end        case 6 % placeholders marking saccade window            Screen(SrcWindow(windowno), 'FrameRect', 7, ...                [stim_pos(1)-stimsize/2 stim_pos(2)-stimsize/2 stim_pos(1)+stimsize/2 stim_pos(2)+stimsize/2]);            if (use_fprintf)                fprintf('Make placeholder\n')            end        case 7 % 4-dot mask            Screen('FillRect', SrcWindow(windowno), color_no, ...                [(stim_pos(1)-(stimsize/2)) (stim_pos(2)-(stimsize/2)) (stim_pos(1)-(stimsize/3)) (stim_pos(2)-(stimsize/3))]); % upper-left dot            Screen('FillRect', SrcWindow(windowno), color_no, ...                [(stim_pos(1)+(stimsize/3)) (stim_pos(2)-(stimsize/2)) (stim_pos(1)+(stimsize/2)) (stim_pos(2)-(stimsize/3))]); % upper-right dot            Screen('FillRect', SrcWindow(windowno), color_no, ...                [(stim_pos(1)-(stimsize/2)) (stim_pos(2)+(stimsize/3)) (stim_pos(1)-(stimsize/3)) (stim_pos(2)+(stimsize/2))]); % lower-left dot            Screen('FillRect', SrcWindow(windowno), color_no, ...                [(stim_pos(1)+(stimsize/3)) (stim_pos(2)+(stimsize/3)) (stim_pos(1)+(stimsize/2)) (stim_pos(2)+(stimsize/2))]); % lower-right dot            if (use_fprintf)                fprintf('Make dot mask\n')            end    endend